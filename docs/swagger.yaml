definitions:
  model.Task:
    properties:
      description:
        description: タスク説明文
        type: string
        x-order: "3"
      id:
        description: タスクID（自動で生成されるUUID）
        type: string
        x-order: "0"
      status:
        description: 'タスクのステータス（0: 未着手, 1: 完了）'
        type: integer
        x-order: "4"
      title:
        description: タスクタイトル
        type: string
        x-order: "2"
      user_id:
        description: ユーザID
        type: string
        x-order: "1"
    type: object
info:
  contact: {}
  description: TODOリストアプリのRESTfulAPI（Go実装）
  title: TodoList API
  version: "1.0"
paths:
  /v1/tasks:
    get:
      description: ユーザのタスクを複数件取得する
      parameters:
      - description: 'タスクステータス 0: 未着手 1: 完了'
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
      security:
      - TokenAuth: []
      summary: タスク取得
      tags:
      - task
    post:
      consumes:
      - application/json
      description: ユーザのタスクを追加する
      parameters:
      - description: 登録タスク内容（id / user_idの値は自動セット）
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Task'
      security:
      - TokenAuth: []
      summary: タスク追加
      tags:
      - task
  /v1/tasks/{id}:
    delete:
      description: ユーザのタスクを削除する
      parameters:
      - description: タスクID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      security:
      - TokenAuth: []
      summary: タスク削除
      tags:
      - task
    get:
      description: ユーザのタスクを1件取得する
      parameters:
      - description: タスクID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      security:
      - TokenAuth: []
      summary: タスク取得（1件）
      tags:
      - task
    put:
      consumes:
      - application/json
      description: ユーザのタスクを更新する
      parameters:
      - description: タスクID
        in: path
        name: id
        required: true
        type: string
      - description: 登録タスク内容（id / user_idの値は自動セット）
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
      security:
      - TokenAuth: []
      summary: タスク更新
      tags:
      - task
securityDefinitions:
  TokenAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
